apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// Data Binding
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.martiandeveloper.exchangerate"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    // Default
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // KTX
    implementation "androidx.core:core-ktx:$ktx"
    // AppCompat
    implementation "androidx.appcompat:appcompat:$appcompat"
    // ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // Test
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$junit2"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    // Material
    implementation "com.google.android.material:material:$material"
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle"
    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    // Retrofit converter Moshi
    implementation "com.squareup.retrofit2:converter-moshi:$converter_moshi"
    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"
}
